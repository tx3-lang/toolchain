name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Read manifest content
        id: read_manifest
        run: |
          echo "content=$(cat manifest.json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            This release includes the toolchain manifest with the following components versions:
            - **Trix**: `min ${{ fromJson(steps.read_manifest.outputs.content)['tools'][0].min_version }}` / `max ${{ fromJson(steps.read_manifest.outputs.content)['tools'][0].max_version }}`
            - **LSP**: `min ${{ fromJson(steps.read_manifest.outputs.content)['tools'][1].min_version }}` / `max ${{ fromJson(steps.read_manifest.outputs.content)['tools'][1].max_version }}`
            - **Dolos**: `min ${{ fromJson(steps.read_manifest.outputs.content)['tools'][2].min_version }}` / `max ${{ fromJson(steps.read_manifest.outputs.content)['tools'][2].max_version }}`
            - **CShell**: `min ${{ fromJson(steps.read_manifest.outputs.content)['tools'][3].min_version }}` / `max ${{ fromJson(steps.read_manifest.outputs.content)['tools'][3].max_version }}`
          files: |
            manifest.json
          draft: false
          prerelease: false
